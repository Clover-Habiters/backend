name: CD-Deploy

# Trigger 설정 -> develop 브랜치에 push 할 경우 실행
on:
  push:
    branches:
      - develop_BE

# 권한 설정
permissions:
  contents: read

jobs:
  CI-CD:
    runs-on: ubuntu-latest

    steps:
      # JDK 설정
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # 환경 변수 설정
      - name: Set up Environment
        run: echo "${{ secrets.ENV }}" > ./.env # GitHub SecretKey 에서 설정한 내용으로 .env 파일 생성

      # 빌드
      - name: Build with Gradle
        run: ./gradlew clean bootJar

      #빌드 후 도커 허브로 push
      - name: Docker Build & Push to Hub
        run: |
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker build -t ${{ secrets.DOCKER_USERNAME }}/habbitters .
          docker push ${{ secrets.DOCKER_USERNAME }}/habbitters:latest
      # 환경 변수 파일 서버로 전달하기(복사 후 붙여넣기)
      - name: Send to Environment
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.DEV_HOST }}
          username: ${{ secrets.DEV_USERNAME }}
          password: ${{ secrets.DEV_PASSWORD }}
#          key: ${{ secrets.EC2_PRIVATE_KEY }}
          source: "./.env"
          target: "/home/clover/"

      # 도커 컴포즈 설정 파일 서버로 전달하기(복사 후 붙여넣기)
      - name: Send to Docker-Compose
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.DEV_HOST }}
          username: ${{ secrets.DEV_USERNAME }}
          password: ${{ secrets.DEV_PASSWORD }}
#          key: ${{ secrets.EC2_PRIVATE_KEY }}
          port: 22
          source: "./docker-compose.yml"
          target: "/home/clover/"

      # 도커 컴포즈 실행하기
      # 도커 허브에서 jar파일 및 pull후에 컴포즈 up
      - name: Deploy to Dev
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DEV_HOST }}
          username: ${{ secrets.DEV_USERNAME }}
          password: ${{ secrets.DEV_PASSWORD }}
#          key: ${{ secrets.EC2_PRIVATE_KEY }}
          port: 22
          script: |
            sudo docker rm -f $(docker ps -qa)
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/habbitters:latest
            docker-compose up -d
            docker image prune -f